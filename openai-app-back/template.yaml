AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  openai-app-back
  
  Sample SAM Template for openai-app-back

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 60
    MemorySize: 128

Resources:
  ChatgptSearchWordFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: chatgpt-search-word/
      Handler: chatgpt-search-word
      Runtime: go1.x
      Architectures:
        - x86_64
      Policies:
        - TranslateFullAccess
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /search/word
            Method: GET
            RestApiId: !Ref OpenaiAppApi
            RequestParameters:
              "method.request.path.q":
                Required: true
                Caching: false
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          API_KEY: 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

  # --------------------
  # API Gateway
  # --------------------
  OpenaiAppApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: "openai-app-api"
      StageName: dev
      OpenApiVersion: 3.0.2
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'86400'"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ChatgptSearchWordAPI:
    Description: "API Gateway endpoint URL for dev environment for First Function"
    Value: !Sub "https://${OpenaiAppApi}.execute-api.${AWS::Region}.amazonaws.com/dev/search/word/"
  ChatgptSearchWordFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt ChatgptSearchWordFunction.Arn
  ChatgptSearchWordFunctionIamRole:
    Description: "Implicit IAM Role created for ChatgptSearchWordFunction"
    Value: !GetAtt ChatgptSearchWordFunctionRole.Arn
  WebEndpoint:
    Description: "API Gateway endpoint URL for dev stage"
    Value: !Sub "https://${OpenaiAppApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
